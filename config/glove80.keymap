/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {

&lt {  // layer-tap config
  flavor = "balanced";
  tapping-term-ms = <200>;
  quick-tap-ms = <175>;
};
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            global-quick-tap;
            hold-trigger-key-positions = <28 29 30 31 40 41 42 43 58 59 60 61 32 44 62>;
            hold-trigger-on-release;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;

            flavor = "balanced";
            tapping-term-ms = <280>;
            quick_tap_ms = <175>;
            global-quick-tap;
            hold-trigger-key-positions = <23 35 36 37 38 39 47 48 49 50 51 24 25 26 27>;
            hold-trigger-on-release;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <3 4>;
            then-layer = <5>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Default_Layer {
            bindings = <
                &none  &none            &none            &none         &none                                                                                           &none          &none         &none             &none          &none
                &none  &none            &none            &none         &none          &none                                                                     &none  &none          &none         &none             &none          &none
                &none  &kp Q            &kp W            &kp F         &kp P          &kp B                                                                     &kp J  &kp L          &kp U         &kp Y             &kp SEMICOLON  &none
                &none  &hml LEFT_GUI A  &hml LEFT_ALT R  &hml LCTRL S  &hml LSHIFT T  &kp G                                                                     &kp M  &hmr RSHIFT N  &hmr RCTRL E  &hmr RIGHT_ALT I  &hmr RGUI O    &none
                &none  &kp Z            &kp X            &kp C         &kp D          &kp V  &none    &none      &none        &none      &none       &none      &kp K  &kp H          &kp COMMA     &kp DOT           &kp SLASH      &none
                &none  &none            &none            &none         &none                 &kp TAB  &lt 1 RET  &lt 4 ESC    &lt 3 DEL  &lt 2 BSPC  &kp SPACE         &none          &none         &none             &none          &none
            >;
        };

        Symbol_Layer {
            bindings = <
                &none  &none  &none         &none          &none                                                                                                     &none                  &none            &none              &none  &none
                &none  &none  &none         &none          &none             &none                                                             &none                 &none                  &none            &none              &none  &none
                &none  &none  &kp CARET     &kp PERCENT    &kp SLASH         &kp UNDERSCORE                                                    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp EXCLAMATION  &kp SQT            &none  &none
                &none  &none  &kp TILDE     &kp LESS_THAN  &kp GREATER_THAN  &kp EQUAL                                                         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON        &kp DOUBLE_QUOTES  &none  &none
                &none  &none  &kp ASTERISK  &kp AT_SIGN    &kp HASH          &kp MINUS       &none   &none   &none     &none   &none   &none   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp QUESTION     &kp GRAVE          &none  &none
                &none  &none  &none         &none          &none                             &trans  &trans  &trans    &trans  &trans  &trans                        &none                  &none            &none              &none  &none
            >;
        };

        Number_Layer {
            bindings = <
                &none  &none  &none         &none   &none                                                                           &none      &none      &none          &none  &none
                &none  &none  &none         &none   &none   &none                                                        &none      &none      &none      &none          &none  &none
                &none  &none  &kp N7        &kp N8  &kp N9  &kp PLUS                                                     &kp SLASH  &kp TILDE  &kp PIPE   &kp BACKSLASH  &none  &none
                &none  &none  &kp NUMBER_4  &kp N5  &kp N6  &kp N0                                                       &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT      &none  &none
                &none  &none  &kp N1        &kp N2  &kp N3  &kp MINUS  &none   &none   &none     &none   &none   &none   &kp HOME   &kp PG_DN  &kp PG_UP  &kp END        &none  &none
                &none  &none  &none         &none   &none              &trans  &trans  &trans    &trans  &trans  &trans             &none      &none      &none          &none  &none
            >;
        };

        Function_Layer {
            bindings = <
                &trans  &trans  &trans  &trans  &trans                                                                     &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                                                     &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &kp F7  &kp F8  &kp F9  &kp F12                                                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &kp F4  &kp F5  &kp F6  &kp F11                                                    &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F10  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans           &trans  &trans  &trans    &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

        Media_Layer {
            bindings = <
                &trans  &trans  &trans  &trans  &trans                                                                                  &trans            &trans           &trans         &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                                                    &trans                &trans            &trans           &trans         &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                                                    &kp C_BRIGHTNESS_INC  &kp PRINTSCREEN   &kp PRINTSCREEN  &kp C_BRI_DEC  &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans                                                    &kp C_PREV            &kp C_PLAY_PAUSE  &kp C_PP         &kp C_NEXT     &trans  &trans
                &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &kp C_VOL_DN          &kp C_MUTE        &kp C_MUTE       &kp C_VOL_UP   &trans  &trans
                &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans    &trans  &trans  &trans                        &trans            &trans           &trans         &trans  &trans
            >;
        };

        Config_Layer {
            bindings = <
                &none  &none        &none            &none            &none                                                                                                             &none  &none  &none  &none        &none
                &none  &none        &none            &none            &none            &none                                                                              &none         &none  &none  &none  &none        &none
                &none  &bootloader  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_COLOR_HSB(0,0,100)                                                     &none         &none  &none  &none  &bootloader  &none
                &none  &none        &rgb_ug RGB_ON   &rgb_ug RGB_TOG  &rgb_ug RGB_OFF  &rgb_ug RGB_COLOR_HSB(31,97,50)                                                    &out OUT_USB  &bt_0  &bt_1  &bt_2  &bt_3        &none
                &none  &sys_reset   &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(0,100,50)  &none   &none   &none     &none   &none   &none   &none         &none  &none  &none  &sys_reset   &none
                &none  &none        &none            &none            &none                                             &trans  &trans  &trans    &trans  &trans  &trans                &none  &none  &none  &none        &none
            >;
        };
    };
};
