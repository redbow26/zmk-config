/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
            ignore-modifiers;
        };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&skq>, <&kp>;
        };

        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    macros {
        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &none  &none  &none         &none        &none                                                                                            &none       &none         &none         &none          &none
                &none  &none  &none         &none        &none       &none                                                                         &none  &none       &none         &none         &none          &none
                &none  &kp Q  &kp W         &kp F        &kp P       &kp B                                                                         &kp J  &kp L       &kp U         &kp Y         &kp SEMICOLON  &none
                &none  &kp A  &hm LSHIFT R  &hm LCTRL S  &hm LGUI T  &kp G                                                                         &kp M  &hm RGUI N  &hm RCTRL E   &hm RSHIFT I  &kp O          &none
                &none  &kp Z  &kp X         &kp C        &kp D       &kp V  &none        &none      &none       &none        &none    &none        &kp K  &kp H       &kp KP_COMMA  &kp KP_DOT    &kp KP_DIVIDE  &none
                &none  &none  &none         &none        &none              &mo_tog 1 1  &kp SPACE  &kp BSPC    &key_repeat  &kp RET  &mo_tog 2 1         &none       &none         &none         &none          &none
            >;
        };

        Symbol_layer {
            bindings = <
                &none  &none            &none             &none              &none                                                                                                          &none       &none     &none     &none      &none
                &none  &none            &none             &none              &none          &none                                                                            &none          &none       &none     &none     &none      &none
                &none  &kp CARET        &kp UNDERSCORE    &kp MINUS          &kp BACKSLASH  &kp PLUS                                                                         &kp AMPERSAND  &kp HASH    &kp LBKT  &kp RBKT  &kp PRCNT  &none
                &none  &kp EXCLAMATION  &kp SINGLE_QUOTE  &kp DOUBLE_QUOTES  &kp GRAVE      &kp EQUAL                                                                        &kp PIPE       &kp COLON   &kp LPAR  &kp RPAR  &kp QMARK  &none
                &none  &kp DOT          &kp LESS_THAN     &kp GREATER_THAN   &kp SLASH      &kp ASTERISK  &none        &none      &none       &none    &none    &none        &kp TILDE      &kp DOLLAR  &kp LBRC  &kp RBRC  &kp AT     &none
                &none  &none            &none             &none              &none                        &mo_tog 1 1  &kp SPACE  &kp BSPC    &kp DEL  &kp RET  &mo_tog 2 2                 &none       &none     &none     &none      &none
            >;
        };

        number_layer {
            bindings = <
                &none  &none  &none  &none  &none                                                                                             &none            &none            &none            &none      &none
                &none  &none  &none  &none  &none  &none                                                                     &none            &none            &none            &none            &none      &none
                &none  &none  &none  &none  &none  &none                                                                     &kp ASTERISK     &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS  &none
                &none  &none  &none  &none  &none  &none                                                                     &kp SLASH        &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS   &none
                &none  &none  &none  &none  &none  &none  &none        &none      &none       &none    &none    &none        &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EQUAL  &none
                &none  &none  &none  &none  &none         &mo_tog 1 1  &kp SPACE  &kp BSPC    &kp DEL  &kp RET  &mo_tog 2 2                   &none            &none            &none            &none      &none
            >;
        };

        config_layer {
            bindings = <
                &none  &none        &none            &none            &none                                                                                                                              &none  &none  &none  &none        &none
                &none  &none        &none            &none            &none            &none                                                                                               &none         &none  &none  &none  &none        &none
                &none  &bootloader  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_COLOR_HSB(0,0,100)                                                                      &none         &none  &none  &none  &bootloader  &none
                &none  &none        &rgb_ug RGB_ON   &rgb_ug RGB_TOG  &rgb_ug RGB_OFF  &rgb_ug RGB_COLOR_HSB(31,97,50)                                                                     &out OUT_USB  &bt_0  &bt_1  &bt_2  &bt_3        &none
                &none  &sys_reset   &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_COLOR_HSB(0,100,50)  &none        &none      &none       &none    &none    &none        &none         &none  &none  &none  &sys_reset   &none
                &none  &none        &none            &none            &none                                             &mo_tog 1 1  &kp SPACE  &kp BSPC    &kp DEL  &kp RET  &mo_tog 2 2                &none  &none  &none  &none        &none
            >;
        };
    };
};
